name: Testes

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Instalar depend√™ncias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Executar testes
      run: |
        PYTHONPATH=. pytest -v
    
    - name: Executar testes com cobertura
      run: |
        PYTHONPATH=. pytest --cov=snake --cov-report=xml --cov-report=html
    
    - name: Upload cobertura para Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-historical:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Instalar depend√™ncias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Testar todos os commits
      run: |
        echo "=== TESTANDO TODOS OS COMMITS ==="
        git log --oneline --reverse --format="%H %s" | while read commit message; do
          echo ""
          echo "üîç Testando: $message"
          echo "Commit: $commit"
          git checkout $commit
          PYTHONPATH=. pytest -v --tb=line
          echo "‚úÖ Commit $commit testado"
        done
